plugins {
   id 'java'
   id 'org.springframework.boot' version '3.2.1'
   id 'io.spring.dependency-management' version '1.1.4'
   id 'application'
}

jar{
    enabled = false
}

application {
    mainClass.set('com.diary.drawing.DrawingApplication')       // 메인클래스 명시
} 


group = 'com.template'
version = '0.0.1-SNAPSHOT'

java {
   sourceCompatibility = '17'
}


repositories {
   mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.tomcat:tomcat-jdbc:8.5.98'
    implementation 'org.hibernate:hibernate-core:6.4.4.Final'
    runtimeOnly 'mysql:mysql-connector-java:8.0.30'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.2.2'

    // s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation "com.amazonaws:aws-java-sdk-s3:1.12.395"

    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

    //스프링 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'

    //Oath2(좀 수정 필요함 뭐가 뭔지 모르겠음)
    // TODO: 문제 없으면 지우기
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.security.oauth:spring-security-oauth2:2.5.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // jwt
    implementation 'com.auth0:java-jwt:4.4.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // 이메일 인증
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.2.2'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.2.2'

    // s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // 메세지 인증
    implementation 'net.nurigo:sdk:4.3.0'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

tasks.named('test') {
   useJUnitPlatform()
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE // 중복 파일을 포함하도록 설정
}
